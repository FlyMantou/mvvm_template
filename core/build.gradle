apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    api "com.android.support:appcompat-v7:$rootProject.support"
    api "com.android.support:recyclerview-v7:$rootProject.support"
    api "com.android.support:cardview-v7:$rootProject.support"
    api "com.android.support:design:$rootProject.support"
    api "com.android.support:support-v4:$rootProject.support"
    api "com.android.support:support-core-utils:$rootProject.support"
    api "com.android.support:multidex:$rootProject.multidex"
    api "com.android.support.constraint:constraint-layout:$rootProject.constraint"

    api "android.arch.persistence.room:runtime:$rootProject.room"
    api "android.arch.persistence.room:rxjava2:$rootProject.room"
    api "android.arch.lifecycle:runtime:$rootProject.lifecycle"
    api "android.arch.lifecycle:extensions:$rootProject.lifecycle"
    //api "android.arch.lifecycle:common-java8:$rootProject.lifecycle"
    api "android.arch.lifecycle:reactivestreams:$rootProject.lifecycle"

    api "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    api "com.squareup.retrofit2:retrofit-mock:$rootProject.retrofit"
    //api = "com.squareup.okhttp3:logging-interceptor:${rootProject.okhttp_logging_interceptor}"
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    //api "com.google.code.gson:gson:$rootProject.gson"
    api "com.google.dagger:dagger:$rootProject.dagger"
    api "com.google.dagger:dagger-android:$rootProject.dagger"
    api "com.google.dagger:dagger-android-support:$rootProject.dagger"
    api "com.github.bumptech.glide:glide:$rootProject.glide"
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android"
    api 'android.arch.navigation:navigation-fragment-ktx:' + rootProject.navigationVersion
    api 'android.arch.navigation:navigation-ui-ktx:' + rootProject.navigationVersion
    api 'com.github.chrisbanes:PhotoView:2.1.4'
    api "com.safframework.utils:saf-kotlin-ext:0.0.3.6"

    api 'com.just.agentweb:agentweb:' + rootProject.agentweb  //webview

    api "com.safframework.utils:saf-kotlin-ext:${rootProject.saf_kotlin_ext}"
    api("com.safframework.log:saf-logginginterceptor:$rootProject.saf_okhttp_log", {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    })
    //[start]SAF
    api("com.safframework.log:saf-log:$rootProject.saf_log", {
        exclude group: "com.android.support", module: "appcompat-v7"
    })
    //facebook
    api 'com.facebook.android:facebook-android-sdk:[4,5)'

    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"
    kapt "android.arch.persistence.room:compiler:$rootProject.room"
    kapt "android.arch.lifecycle:compiler:$rootProject.lifecycle"

    debugApi 'com.squareup.leakcanary:leakcanary-android:' + rootProject.leakcanary
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.leakcanary
}
